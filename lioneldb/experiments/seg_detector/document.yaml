import: []
#     - 'lioneldb/experiments/seg_detector/base_ic15.yaml'
package: 
    - 'decoders.seg_detector_loss'
    - 'experiment'
    - 'structure.model'
    - 'training.learning_rate'
    - 'data'
    - 'data.processes'
define:
  - name: train_data
    class: ImageDataset
    data_dir:
        - './datasets/projects_processed'
    data_list:
        - './datasets/projects_processed/train_list.txt'
    processes:
        - class: AugmentDetectionData
          augmenter_args:
              - ['Fliplr', 0.5]
              - {'cls': 'Affine', 'rotate': [-10, 10]}
              - ['Resize', [0.5, 3.0]]
          only_resize: False
          keep_ratio: False
        - class: RandomCropData
          size: [640, 640]
          max_tries: 10
        - class: MakeICDARData
        - class: MakeSegDetectionData
        - class: MakeBorderMap
        - class: NormalizeImage
        - class: FilterKeys
          superfluous: ['polygons', 'filename', 'shape', 'ignore_tags', 'is_training']

  - name: validate_data
    class: ImageDataset
    data_dir:
        - './datasets/projects_processed'
    data_list:
        - './datasets/projects_processed/test_list.txt'
    processes:
        - class: AugmentDetectionData
          augmenter_args:
              # - ['Resize', {'width': 1280, 'height': 736}]
              - ['Resize', {'width': 1536, 'height': 1536}]
          only_resize: True
          keep_ratio: True
        - class: MakeICDARData
        - class: MakeSegDetectionData
        - class: NormalizeImage

  - name: 'Experiment'
    class: Experiment
    structure: 
        class: Structure
        builder: 
            class: Builder
            model: SegDetectorModel
            model_args:
                backbone: deformable_resnet50
                decoder: SegDetector
                decoder_args: 
                    adaptive: True
                    in_channels: [256, 512, 1024, 2048]
                    k: 50
                loss_class: L1BalanceCELoss

        representer:
            class: SegDetectorRepresenter
            max_candidates: 1000
        measurer:  
            class: QuadMeasurer
        visualizer:  
            class: SegDetectorVisualizer
    train: 
        class: TrainSettings
        data_loader: 
            class: DataLoader
            dataset: ^train_data
            batch_size: 16
            num_workers: 16
        checkpoint: 
            class: Checkpoint
            start_epoch: 0
            start_iter: 0
            resume: null
        model_saver: 
            class: ModelSaver
            dir_path: model
            save_interval: 3550
            signal_path: save
        scheduler: 
            class: OptimizerScheduler
            optimizer: "SGD"
            optimizer_args:
                lr: 0.007
                momentum: 0.9
                weight_decay: 0.0001
            learning_rate:  
                class: DecayLearningRate
                epochs: 1200
        epochs: 1200

    validation: &validate
        class: ValidationSettings
        data_loaders:
            icdar2015: 
                class: DataLoader
                dataset: ^validate_data
                batch_size: 1
                num_workers: 16
                collect_fn:
                    class: ICDARCollectFN
        visualize: false
        interval: 355
        exempt: 1

    logger:
        class: Logger
        verbose: true
        level: info
        log_interval: 355

    evaluation: *validate
